name: goreleaser

on:
  workflow_dispatch:
  push:
    tags:
      - 'v*'
      - 'test-pgp-key'

permissions:
  contents: write

jobs:
  goreleaser:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.calculate-version.outputs.version }}
      tag_name: ${{ steps.calculate-version.outputs.tag_name }}

    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Fetch all tags
      run: git fetch --force --tags

    - name: Set up Go
      uses: actions/setup-go@v3
      with:
          go-version: 1.19

    - uses: crazy-max/ghaction-import-gpg@v5
      id: import_gpg
      with:
        gpg_private_key: ${{ secrets.OCTOPUS_GPG_PRIVATE_KEY }}
        passphrase: ${{ secrets.OCTOPUS_GPG_PASSPHRASE }}

    - name: Write GPG private key to shared memory for use when signing rpm/deb packages
      id: private_key_shm
      run: |
        PRIVATE_KEY_SHM="$(mktemp /dev/shm/cli.XXXXXXXX)" # Use private file in shared memory to avoid writing to disk
        echo "$GPG_PRIVATE_KEY" >> "$PRIVATE_KEY_SHM"
        echo "::set-output name=private_key_file_path::$PRIVATE_KEY_SHM"
      env:
        GPG_PRIVATE_KEY: ${{ secrets.OCTOPUS_GPG_PRIVATE_KEY }}

    - name: Run GoReleaser
      id: goreleaser-release
      uses: goreleaser/goreleaser-action@v3
      with:
        version: latest
        args: release --rm-dist
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        GPG_FINGERPRINT: ${{ steps.import_gpg.outputs.fingerprint }}
        GPG_PASSWORD: ${{ secrets.OCTOPUS_GPG_PASSPHRASE }}
        GPG_PRIVATE_KEY_FILE: ${{ steps.private_key_shm.outputs.private_key_file_path }}
        NFPM_DEFAULT_PASSPHRASE: ${{ secrets.OCTOPUS_GPG_PASSPHRASE }}

    - name: Remove GPG private key from shared memory
      if: ${{ success() || failure() }}
      run: rm -f "${{ steps.private_key_shm.outputs.private_key_file_path }}"
